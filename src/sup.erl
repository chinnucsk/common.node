-module(common.node.sup).

-behaviour(supervisor).
%%--------------------------------------------------------------------
%% Include files
%%--------------------------------------------------------------------
-include("debug.hrl").
-include("utils.hrl").

%%--------------------------------------------------------------------
%% Imported libraries
%%--------------------------------------------------------------------
-import(proplists).
-import(supervisor).
-import(common.node.node).
-import(common.node.boot_server).
-import(common.node.boot_client).

%%--------------------------------------------------------------------
%% External exports
%%--------------------------------------------------------------------
-export([
	 start_link/1
        ]).

%%--------------------------------------------------------------------
%% Internal exports
%%--------------------------------------------------------------------
-export([
	 init/1
        ]).

%%--------------------------------------------------------------------
%% Macros
%%--------------------------------------------------------------------


%%--------------------------------------------------------------------
%% Records
%%--------------------------------------------------------------------

%%====================================================================
%% External functions
%%====================================================================

%%--------------------------------------------------------------------
%% Function: start_link/1
%% Description: Starts the supervisor
%%--------------------------------------------------------------------
%% FIXME
start_link(Args) ->
    case node:role() of
	boot_client -> boot_client:start_link(Args);
	boot_server -> supervisor:start_link(?MODULE, Args);
	_Undefined -> {ok, self()}
    end.


%%--------------------------------------------------------------------
%% Function: stop/1
%% Description: Starts the supervisor
%%--------------------------------------------------------------------
stop(Pid) ->
    %%    supervisor:stop(?MODULE, {FSM}).
    %% TODO
    ok.

%%====================================================================
%% Server functions
%%====================================================================
%%--------------------------------------------------------------------
%% Func: init/1
%% Returns: {ok,  {SupFlags,  [ChildSpec]}} |
%%          ignore                          |
%%          {error, Reason}   
%%--------------------------------------------------------------------
init(Args) ->
    Spec = case node:role() of
	       undefined -> [];
	       Role -> 
		   Module = module(Role),
		   [{Role,
			 {Module, start_link, Args},
			 temporary, 5000, worker,
			 [Module]}]
	   end,
    {ok,{{one_for_one, 10, 5}, Spec}}.
    
%%====================================================================
%% Internal functions
%%====================================================================
module(boot_server) -> common.node.boot_server;
module(boot_client) -> common.node.boot_client;
module(_) -> undefined.
    
